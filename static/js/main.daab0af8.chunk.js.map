{"version":3,"sources":["components/Navbar.js","views/Home/Card.js","views/Home/Cardlist.js","views/Home/Filter.js","views/Home/Home.js","views/NoMatch/NoMatch.js","views/Detail/CountryDetail.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","nightModeButton","useRef","darkmode","current","className","to","id","onClick","item","setDarkmode","ref","Card","data","style","backgroundImage","flag","name","replace","population","toLocaleString","region","capital","Cardlist","items","Object","values","map","i","key","Filter","regionOptions","searchInput","filterLabel","filterLabelText","updateFilterRegionChange","ele","undefined","target","value","length","textContent","charAt","toUpperCase","slice","onFilterRegionChange","type","placeholder","onChange","onSearchChange","onMouseOver","visibility","onMouseLeave","Home","useState","searchfield","setSearchfield","filterRegion","setFilterRegion","filteredCountries","setFilteredCountries","useEffect","countriesData","filteredItems","filter","toLowerCase","includes","NoMatch","CountryDetail","countryName","match","params","countryInfo","setCountryInfo","countryMatch","find","FilteredItems","propertyName","filtered","property","subregion","topLevelDomain","currencies","languages","link","alpha3Code","Button","tabIndex","push","Borders","borders","App","setCountriesData","a","fetch","json","then","response","catch","err","console","error","fetchAll","localStorage","getItem","document","body","addEventListener","e","querySelector","classList","remove","add","setItem","removeItem","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.daab0af8.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  const nightModeButton = useRef(null);\r\n\r\n  function toggleNightMode() {\r\n    let item = nightModeButton.current;\r\n\r\n    if (!props.darkmode) {\r\n      item.className = \"fas fa-moon\";\r\n      props.setDarkmode(true);\r\n    } else {\r\n      item.className = \"far fa-moon\";\r\n      props.setDarkmode(false);\r\n    }\r\n  }\r\n\r\n  if (props.darkmode) {\r\n    nightModeButton.current.className = \"fas fa-moon\";\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <Link to=\"/\" className=\"home\">\r\n          <h1>Where in the world?</h1>\r\n        </Link>\r\n\r\n        <button id=\"button-darkmode\" onClick={toggleNightMode}>\r\n          <i\r\n            id=\"icon-darkmode\"\r\n            className=\"far fa-moon\"\r\n            ref={nightModeButton}\r\n          ></i>\r\n          <p>Dark Mode</p>\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ data }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <Link\r\n        className=\"card-img\"\r\n        style={{ backgroundImage: `url(` + data.flag + `)` }}\r\n        to={`/detail/${data.name.replace(/ /g, \"_\")}`}\r\n      ></Link>\r\n\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title country\">{data.name}</h2>\r\n\r\n        <ul className=\"card-info\">\r\n          <li>\r\n            <h3>Population:</h3>\r\n            <p className=\"population\">{data.population.toLocaleString()}</p>\r\n          </li>\r\n          <li>\r\n            <h3>Region:</h3>\r\n            <p className=\"region\">{data.region}</p>\r\n          </li>\r\n          <li>\r\n            <h3>Capital:</h3>\r\n            <p className=\"capital\">{data.capital}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({ items }) => {\r\n  return (\r\n    <section className=\"cardlist\">\r\n      {Object.values(items).map((item, i) => {\r\n        return <Card key={i} data={item}></Card>;\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cardlist;\r\n","import React, { useRef } from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  const regionOptions = useRef(null);\r\n  const searchInput = useRef(null);\r\n  const filterLabel = useRef(null);\r\n  const filterLabelText = useRef(null);\r\n\r\n  function showFilterRegion() {\r\n    let item = regionOptions.current;\r\n    item.style.visibility = \"unset\";\r\n  }\r\n\r\n  function hideFilterRegion() {\r\n    let item = regionOptions.current;\r\n    item.style.visibility = \"hidden\";\r\n  }\r\n\r\n  function updateFilterRegionChange(ele) {\r\n    if (ele.target.value !== undefined) {\r\n      if (ele.target.value.length > 1) {\r\n        filterLabelText.current.textContent =\r\n          ele.target.value.charAt(0).toUpperCase() + ele.target.value.slice(1);\r\n        filterLabel.current.className = \"fas fa-times-circle\";\r\n      } else {\r\n        filterLabel.current.className = \"fas fa-angle-down\";\r\n        filterLabelText.current.textContent = \"Filter by Region\";\r\n      }\r\n    } else {\r\n      filterLabel.current.className = \"fas fa-angle-down\";\r\n      filterLabelText.current.textContent = \"Filter by Region\";\r\n    }\r\n\r\n    props.onFilterRegionChange(ele);\r\n  }\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"searchbar\">\r\n        <i className=\"fas fa-search\"></i>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a country...\"\r\n          onChange={props.onSearchChange}\r\n          ref={searchInput}\r\n        ></input>\r\n      </div>\r\n\r\n      <div\r\n        className=\"filter-region\"\r\n        onMouseOver={showFilterRegion}\r\n        onMouseLeave={hideFilterRegion}\r\n      >\r\n        <div className=\"filter-region-label-container\">\r\n          <button\r\n            className=\"filter-region-label\"\r\n            type=\"button\"\r\n            value=\"\"\r\n            onClick={updateFilterRegionChange}\r\n          >\r\n            <a ref={filterLabelText}>Filter by Region</a>\r\n            <i ref={filterLabel} className=\"fas fa-angle-down\"></i>\r\n          </button>\r\n        </div>\r\n        <form className=\"filter-region-options\" ref={regionOptions}>\r\n          <button\r\n            type=\"button\"\r\n            value=\"africa\"\r\n            onClick={updateFilterRegionChange}\r\n          >\r\n            Africa\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            value=\"america\"\r\n            onClick={updateFilterRegionChange}\r\n          >\r\n            America\r\n          </button>\r\n          <button type=\"button\" value=\"asia\" onClick={updateFilterRegionChange}>\r\n            Asia\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            value=\"europe\"\r\n            onClick={updateFilterRegionChange}\r\n          >\r\n            Europe\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            value=\"oceania\"\r\n            onClick={updateFilterRegionChange}\r\n          >\r\n            Oceania\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cardlist from \"./Cardlist\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst Home = (props) => {\r\n  const [searchfield, setSearchfield] = useState(\"\");\r\n  const [filterRegion, setFilterRegion] = useState(\"\");\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredCountries(props.countriesData);\r\n    setFilterRegion(\"\");\r\n  }, [props.countriesData]);\r\n\r\n  function onSearchChange(ele) {\r\n    setSearchfield(ele.target.value);\r\n  }\r\n\r\n  function onFilterRegionChange(ele) {\r\n    if (ele.target.value !== undefined) {\r\n      setFilterRegion(ele.target.value);\r\n    } else {\r\n      setFilterRegion(\"\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let filteredItems = props.countriesData.filter((item) => {\r\n      return (\r\n        item.name.toLowerCase().includes(searchfield.toLowerCase()) &&\r\n        item.region.toLowerCase().includes(filterRegion)\r\n      );\r\n    });\r\n\r\n    setFilteredCountries(filteredItems);\r\n  }, [searchfield, props.countriesData, filterRegion]);\r\n\r\n  return (\r\n    <main>\r\n      <Filter\r\n        onSearchChange={onSearchChange}\r\n        onFilterRegionChange={onFilterRegionChange}\r\n      ></Filter>\r\n\r\n      <Cardlist items={filteredCountries}></Cardlist>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction NoMatch() {\r\n  return <div className=\"error\">Nothing found here...</div>;\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CountryDetail = (props) => {\r\n  const countryName = props.match.params.name.replace(/_/g, \" \");\r\n\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (props.countriesData.length !== 0) {\r\n      let countryMatch = props.countriesData.find(\r\n        (item) => item.name === countryName\r\n      );\r\n\r\n      setCountryInfo(countryMatch);\r\n    }\r\n  }, [props.countriesData]);\r\n\r\n  const FilteredItems = (items, propertyName) => {\r\n    let filtered = \"\";\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      let property = items[i];\r\n\r\n      if (propertyName) {\r\n        property = items[i][propertyName];\r\n      }\r\n      filtered += property;\r\n\r\n      if (i < items.length - 1) {\r\n        filtered += \", \";\r\n      }\r\n    }\r\n\r\n    return <div>{filtered}</div>;\r\n  };\r\n\r\n  const Borders = (items) => {\r\n    let filtered = [];\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      let property = items[i];\r\n      property = props.countriesData.find(\r\n        (item) => item.alpha3Code === property\r\n      );\r\n      let link = property.name.replace(/ /g, \"_\");\r\n\r\n      let Button = (\r\n        <Link to={link} key={i}>\r\n          <button tabIndex=\"-1\">{property.name}</button>\r\n        </Link>\r\n      );\r\n\r\n      filtered.push(Button);\r\n    }\r\n\r\n    if (filtered.length == 0) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <li className=\"bordercountries\">\r\n          <h3>Border Countries:</h3>\r\n          <div>{filtered}</div>\r\n        </li>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"country-detail-container\">\r\n      <button type=\"button\" className=\"back\">\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-arrow-left\"></i>\r\n          <p>Back</p>\r\n        </Link>\r\n      </button>\r\n\r\n      {countryInfo.name === countryName && (\r\n        <section className=\"country-detail\">\r\n          <a\r\n            className=\"card-img\"\r\n            style={{ backgroundImage: `url(` + countryInfo.flag + `)` }}\r\n          ></a>\r\n\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title country\">{countryInfo.name}</h2>\r\n\r\n            <ul className=\"card-info\">\r\n              <div className=\"divider\">\r\n                <div>\r\n                  <li>\r\n                    <h3>Population:</h3>\r\n                    <p className=\"population\">\r\n                      {countryInfo.population.toLocaleString()}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <h3>Region:</h3>\r\n                    <p className=\"region\">{countryInfo.region}</p>\r\n                  </li>\r\n                  <li>\r\n                    <h3>Sub Region:</h3>\r\n                    <p className=\"subregion\">{countryInfo.subregion}</p>\r\n                  </li>\r\n                  <li>\r\n                    <h3>Capital:</h3>\r\n                    <p className=\"capital\">{countryInfo.capital}</p>\r\n                  </li>\r\n                </div>\r\n\r\n                <div className=\"additional\">\r\n                  <li>\r\n                    <h3>Top Level Domain:</h3>\r\n                    <p className=\"topleveldomain\">\r\n                      {countryInfo.topLevelDomain}\r\n                    </p>\r\n                  </li>\r\n                  <li className=\"currencies\">\r\n                    <h3>Currencies:</h3>\r\n                    {FilteredItems(countryInfo.currencies, \"name\")}\r\n                  </li>\r\n                  <li className=\"languages\">\r\n                    <h3>Languages:</h3>\r\n                    {FilteredItems(countryInfo.languages, \"name\")}\r\n                  </li>\r\n                </div>\r\n              </div>\r\n\r\n              {Borders(countryInfo.borders)}\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./views/Home/Home\";\r\nimport NoMatch from \"./views/NoMatch/NoMatch\";\r\nimport CountryDetail from \"./views/Detail/CountryDetail\";\r\n\r\nfunction App() {\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [darkmode, setDarkmode] = useState(false);\r\n\r\n  async function fetchAll() {\r\n    const response = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\r\n    response\r\n      .json()\r\n      .then((response) => {\r\n        setCountriesData(response);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n    if (localStorage.getItem(\"dark\") !== null) {\r\n      setDarkmode(true);\r\n    }\r\n\r\n    // Listen to tab events to enable outlines (accessibility improvement)\r\n    document.body.addEventListener(\"keyup\", function (e) {\r\n      if (e.key === \"Tab\") {\r\n        /* tab */ document\r\n          .querySelector(\"html\")\r\n          .classList.remove(\"no-focus-outline\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkmode) {\r\n      document.querySelector(\"html\").classList.add(\"dark\");\r\n      localStorage.setItem(\"dark\", \"true\");\r\n    } else {\r\n      document.querySelector(\"html\").classList.remove(\"dark\");\r\n      localStorage.removeItem(\"dark\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar darkmode={darkmode} setDarkmode={setDarkmode}></Navbar>\r\n\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/home\"\r\n          render={(props) => <Home {...props} countriesData={countriesData} />}\r\n        />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n\r\n        <Route\r\n          path=\"/detail/:name\"\r\n          render={(props) => (\r\n            <CountryDetail {...props} countriesData={countriesData} />\r\n          )}\r\n        />\r\n\r\n        <Route component={NoMatch} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}